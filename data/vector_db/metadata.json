{
  "documents": {
    "1": {
      "title": "52d5d1650b9288785a909f051c5fd8c2",
      "file_path": "D:\\dev\\work\\my_rag_chat\\임시 기록.md",
      "chunk_count": 30,
      "created_at": "20250407_112508",
      "chunk_ids": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23",
        "24",
        "25",
        "26",
        "27",
        "28",
        "29",
        "30"
      ],
      "doc_id": "1"
    },
    "2": {
      "title": "52d5d1650b9288785a909f051c5fd8c2",
      "file_path": "D:\\dev\\work\\my_rag_chat\\임시 기록.md",
      "chunk_count": 30,
      "created_at": "20250407_112656",
      "chunk_ids": [
        "31",
        "32",
        "33",
        "34",
        "35",
        "36",
        "37",
        "38",
        "39",
        "40",
        "41",
        "42",
        "43",
        "44",
        "45",
        "46",
        "47",
        "48",
        "49",
        "50",
        "51",
        "52",
        "53",
        "54",
        "55",
        "56",
        "57",
        "58",
        "59",
        "60"
      ],
      "doc_id": "2"
    },
    "3": {
      "title": "b0cc2d4dd6dfe626f3641b20fdd0f31a",
      "file_path": "D:\\dev\\work\\my_rag_chat\\test.md",
      "chunk_count": 30,
      "created_at": "20250407_112817",
      "chunk_ids": [
        "61",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "68",
        "69",
        "70",
        "71",
        "72",
        "73",
        "74",
        "75",
        "76",
        "77",
        "78",
        "79",
        "80",
        "81",
        "82",
        "83",
        "84",
        "85",
        "86",
        "87",
        "88",
        "89",
        "90"
      ],
      "doc_id": "3"
    },
    "4": {
      "title": "1c05d23f3757c251a92cdcc96d7228cd",
      "file_path": "D:\\dev\\work\\my_rag_chat\\temp\\Flutter.md",
      "chunk_count": 63,
      "created_at": "20250407_123105",
      "chunk_ids": [
        "91",
        "92",
        "93",
        "94",
        "95",
        "96",
        "97",
        "98",
        "99",
        "100",
        "101",
        "102",
        "103",
        "104",
        "105",
        "106",
        "107",
        "108",
        "109",
        "110",
        "111",
        "112",
        "113",
        "114",
        "115",
        "116",
        "117",
        "118",
        "119",
        "120",
        "121",
        "122",
        "123",
        "124",
        "125",
        "126",
        "127",
        "128",
        "129",
        "130",
        "131",
        "132",
        "133",
        "134",
        "135",
        "136",
        "137",
        "138",
        "139",
        "140",
        "141",
        "142",
        "143",
        "144",
        "145",
        "146",
        "147",
        "148",
        "149",
        "150",
        "151",
        "152",
        "153"
      ],
      "doc_id": "4"
    },
    "5": {
      "title": "dcf32a9748bc3ecc91d68c73cd00383e",
      "file_path": "D:\\dev\\work\\my_rag_chat\\temp\\Windsurf.eml",
      "chunk_count": 4,
      "created_at": "20250407_150630",
      "chunk_ids": [
        "154",
        "155",
        "156",
        "157"
      ]
    }
  },
  "chunks": {
    "1": {
      "doc_id": "1",
      "index": 0,
      "vector_index": 0,
      "text": "오건영 추천 책\n\n\n산둥 수용소 : 이성적, 합리적인 사람들이 어떻게 환경에 따라 변화하는지를 보여줌\n일본 현대사 : 일본 만화\n사장학개론 : \n돈의 속성 : \n\n\n국고채 금리, 내일채움공제\n\n\n\n\n2025.03.07\n\n\n구글 아이콘\nhttps://fonts.gstatic.com/s/i/materialicons/search/v5/24px.svg\n\n\nhttp...",
      "created_at": "20250407_112508"
    },
    "2": {
      "doc_id": "1",
      "index": 1,
      "vector_index": 1,
      "text": "> 포트 포워딩 설정\n![[Pasted image 20250304211919.png]]\n1. DHCP -> 고정 IP\n2. 방화벽 고급 설정 : 인바운드 포트 열기\n\n\n2025.02.28\n\n\nLLaMA CPP 사용\nhttps://avocadaon.tistory.com/\n50\n\n\n2025.03.02\n\n\n삭제 안되는 파일 삭제 방법\n\n\n\n\n안전 모드로 접속\n\n...",
      "created_at": "20250407_112508"
    },
    "3": {
      "doc_id": "1",
      "index": 2,
      "vector_index": 2,
      "text": "elog.io/@telnturtle/%EC%9E%A1%EB%8B%B4-WSL-%EC%9E%AC%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\n\n\nWSL2로 업그레이드\n\n\nhttps://wikidocs.net/206696\n```\nD:\\dev>wsl --list\nLinux용 Windows 하위 시스템 배포:\nUbuntu-22.04(기본값)\n\n...",
      "created_at": "20250407_112508"
    },
    "4": {
      "doc_id": "1",
      "index": 3,
      "vector_index": 3,
      "text": ":\\dev>wsl --set-version Ubuntu-22.04 2\nWSL 2와의 주요 차이점에 대한 자세한 내용은 https://aka.ms/wsl2를 참조하세요\n\n\n변환이 진행 중입니다. 이 작업은 몇 분 정도 걸릴 수 있습니다.\n\n\n배포는 이미 요청된 버전입니다.\n오류 코드: Wsl/Service/WSL_E_VM_MODE_INVALID_STATE\n\n...",
      "created_at": "20250407_112508"
    },
    "5": {
      "doc_id": "1",
      "index": 4,
      "vector_index": 4,
      "text": "2025.02.28\n\n\nRedis 내용을 보는 프로그램\nhttps://github.com/microsoftarchive/redis/releases\n\n\n2025.02.24\n\n\n잘못 보낸돈 되찾기\n\n\nhttps://fins.kdic.or.kr/\n\n\n복싱 밴드 묶는 방법\n\n\nhttps://www.youtube.com/shorts/A1avKDWZ5JQ\n\n\n회사 3...",
      "created_at": "20250407_112508"
    },
    "6": {
      "doc_id": "1",
      "index": 5,
      "vector_index": 5,
      "text": "ROGIqlkw?pli=1&key=NDMzR3JwMUFVVTh2SHFoNXV1TVdzZUpQNHhTdlRB\n\n\nkt 라우터\n\n\n[Web발신]\n[KT고객센터] KT 와이파이(공유기) 설정메뉴 접속방법 안내\n\n\n안녕하세요.  고객님, KT입니다.\n\n\n■ 홈허브(또는 WiFi Home)계열의 KT공유기와 유선 또는 무선으로 연결된 상태에서 접속하여 확인 가능\n\n...",
      "created_at": "20250407_112508"
    },
    "7": {
      "doc_id": "1",
      "index": 6,
      "vector_index": 6,
      "text": "홈허브 계열 초기값 사용자 ID: ktuser, 비밀번호: megaap\n\n\n☞ 앱 간편문의: https://kt.com/9plf\n\n\n☎ 전화문의: 고객센터 100\n\n\n항상 KT와 함께해 주셔서 감사합니다.\n\n\n[KT, 당신과_미래 사이에] 컨설턴트 윤정희 드림\n\n\n나이 계산기\n\n\nhttps://superkts.com/cal/man_age/20070903\n\n...",
      "created_at": "20250407_112508"
    },
    "8": {
      "doc_id": "1",
      "index": 7,
      "vector_index": 7,
      "text": "을 확인한 후, USB 드라이브를 선택합니다. 'select disk X' (X는 USB 드라이브 번호) 명령어를 사용한 후 'list partition'으로 파티션 목록을 확인하고, 'select partition Y' (Y는 삭제할 파티션 번호) 명령어를 입력한 후 'delete partition'을 입력하여 파티션을 삭제합니다. [\nEaseUS\n]\n\n...",
      "created_at": "20250407_112508"
    },
    "9": {
      "doc_id": "1",
      "index": 8,
      "vector_index": 8,
      "text": "티션을 삭제하고, '작업 실행' 버튼을 클릭하여 변경 사항을 적용합니다. 이 도구는 사용하기 쉬우며, 다양한 디스크 관리 기능을 제공합니다. [\nEaseUS\n]\n\n\n🔄 \nDiskpart로 파티션 합치기\n\n\n-Diskpart를 사용하여 파티션을 합치려면, 먼저 삭제할 파티션을 선택하고 삭제한 후, 확장할 파티션을 선택하여 확장합니다. [\n네이버 블로그\n]\n\n...",
      "created_at": "20250407_112508"
    },
    "10": {
      "doc_id": "1",
      "index": 9,
      "vector_index": 9,
      "text": "선택한 볼륨을 삭제하여 할당되지 않은 공간으로 만듭니다.\n\n\n3️⃣ \nStep 3\n: 파티션 확장\n\n\n-'list partition' 명령어로 파티션 목록을 확인하고, 'select partition Y' (Y는 확장할 파티션 번호) 명령어로 확장할 파티션을 선택합니다. 'extend' 명령어를 사용하여 선택한 파티션을 확장합니다. [\n네이버 블로그\n]\n\n...",
      "created_at": "20250407_112508"
    },
    "11": {
      "doc_id": "1",
      "index": 10,
      "vector_index": 10,
      "text": "uct/%EC%9B%8C%ED%81%AC%EB%A1%9C%EA%B7%B8-%ED%95%98%ED%94%84-%EB%8B%A4%EC%9D%B4%EC%96%B4%EB%A6%AC-ver4-%EB%8D%B0%EC%9D%BC%EB%A6%AC/78/?srsltid=AfmBOoofOutCdsUDcX_fTp88gjO38GQz21vKbBV_j89qkwq4KPsCkpzo\n\n...",
      "created_at": "20250407_112508"
    },
    "12": {
      "doc_id": "1",
      "index": 11,
      "vector_index": 11,
      "text": "s import DatasetDict\n\n\ndevice_map = \"cpu\"\nmax_new_tokens = 64\n\n\ndef generate_response(prompt, model, tokenizer):\n    tokenized_prompt = tokenizer([prompt], return_tensors='pt')\n   , shape = [1, 261]\n\n...",
      "created_at": "20250407_112508"
    },
    "13": {
      "doc_id": "1",
      "index": 12,
      "vector_index": 12,
      "text": "로 바꿔서 리턴함\n# Stripping the input text from generated_ids\ngenerated_ids = [\n    output_ids[len(input_ids):] for input_ids, output_ids in zip(tokenized_prompt.input_ids, generated_ids)\n]\n# shape = [64]\n\n...",
      "created_at": "20250407_112508"
    },
    "14": {
      "doc_id": "1",
      "index": 13,
      "vector_index": 13,
      "text": "LM.from_pretrained(\n    path_pretrained_model,\n    device_map=device_map\n)\n\n\nLoading the tokenizer\n\n\ntokenizer = AutoTokenizer.from_pretrained(\n    path_pretrained_model,\n    device_map=device_map\n)\n\n...",
      "created_at": "20250407_112508"
    },
    "15": {
      "doc_id": "1",
      "index": 14,
      "vector_index": 14,
      "text": "g=True, max_length=512),\n    batched=True,\n    remove_columns=dataset[\"train\"].column_names\n    )\ndata_collator = DataCollatorForLanguageModeling(tokenizer=tokenizer, mlm=False, return_tensors='pt')\n\n...",
      "created_at": "20250407_112508"
    },
    "16": {
      "doc_id": "1",
      "index": 15,
      "vector_index": 15,
      "text": "_epochs=100,\n    per_device_train_batch_size=4,\n    use_cpu=True,\n    save_strategy=\"no\"\n)\n\n\ntrainer = Trainer(model, train_dataset=dataset['train'], args=training_args, data_collator=data_collator)\n\n...",
      "created_at": "20250407_112508"
    },
    "17": {
      "doc_id": "1",
      "index": 16,
      "vector_index": 16,
      "text": "mu75oOX9\n\n\n20241026\n\n\n한국어 LLM 리더 보드\n\n\nhttps://huggingface.co/spaces/upstage/open-ko-llm-leaderboard\nhttps://github.com/NomaDamas/awesome-korean-llm\nhttps://huggingface.co/EleutherAI/polyglot-ko-3.8b\n\n...",
      "created_at": "20250407_112508"
    },
    "18": {
      "doc_id": "1",
      "index": 17,
      "vector_index": 17,
      "text": "장 내용 : \n    - 각종 웹사이트: 아이디, 암호, 설명 \n    - 이메일 계정: 이메일 주소, 암호, 설명\n    - 자주 까먹는 기록 : 주소, 여권번호 등\n- 검색 : \n    - 각 암호는 웹사이트 이름이나 URL 등을 1글자 입력할 때마다 검색되어서 화면에 보여줘야 해. \n    - 검색된 목록 중에 하나를 선택하면 전체 정보가 보이면 돼....",
      "created_at": "20250407_112508"
    },
    "19": {
      "doc_id": "1",
      "index": 18,
      "vector_index": 18,
      "text": "에서는 전체 내용이 보여야 해\n    - 메인 화면에는 검색과 데이터 그룹을 필터링할 수 있는 기능이 있어야 해.\n- 최초 앱 실행 시 \"로그인\" :\n    - 로그인은 \"지문 인식\"으로 가능해야 해.\n        - 최초 지문 등록 과정이 필요 해\n    - 최초 앱 실행 시 로그인에 성공하면, 앱을 종료하기 전까지는 다시 로그인을 할 필요가 없엄.\n\n...",
      "created_at": "20250407_112508"
    },
    "20": {
      "doc_id": "1",
      "index": 19,
      "vector_index": 19,
      "text": "nts:\n        MSVC v142 - VS 2019 C++ x64/x86 build tools\n         - If there are multiple build tool versions available, install the latest\n        C++ CMake tools for Windows\n        Windows 10 SDK\n\n...",
      "created_at": "20250407_112508"
    },
    "21": {
      "doc_id": "1",
      "index": 20,
      "vector_index": 20,
      "text": "ath/artificial_intelligence.xml\nhttps://www.techrepublic.com/rssfeeds/topic/artificial-intelligence/\nhttps://techcrunch.com/tag/artificial-intelligence/feed/\nhttps://www.reddit.com/r/artificial/.rss\n\n...",
      "created_at": "20250407_112508"
    },
    "22": {
      "doc_id": "1",
      "index": 21,
      "vector_index": 21,
      "text": "9002051.png]]\n![[Pasted image 20241019002118.png]]\n![[Pasted image 20241019002200.png]]\n![[Pasted image 20241019002244.png]]\n![[Pasted image 20241019002422.png]]\n![[Pasted image 20241019002546.png]]\n\n...",
      "created_at": "20250407_112508"
    },
    "23": {
      "doc_id": "1",
      "index": 22,
      "vector_index": 22,
      "text": "항목 위치 입력'에 아래 내용 입력\n\nshutdown -s -t 0\n\n1주일에 한번은 Shift 누르고 전원 > \"다시 시작\"을 눌러서 재부팅 후 아래 화면처럼 뜨면 \"PC 끄기\"를 실행한다.\n![[Pasted image 20241019004114.png]]\n\n\n\n\n\n\n꿀을 먹고 싶다면 꿀통을 발로 차지 마라\n    => 비난은 사람을 기운 빠지게 한다\n\n...",
      "created_at": "20250407_112508"
    },
    "24": {
      "doc_id": "1",
      "index": 23,
      "vector_index": 23,
      "text": "전세금 받기\n\n\nhttps://youtube.com/shorts/5Xl-0rYEcFo?si=-GnWv8OJHgqB0Ob-\n\n\n마인드맵\n\n\nhttps://youtube.com/shorts/5Xl-0rYEcFo?si=-GnWv8OJHgqB0Ob-\n\n\n실용적인 한국어 모델 3종\n\n\nhttps://www.youtube.com/watch?v=eNxAgYBdJ2A\n\n...",
      "created_at": "20250407_112508"
    },
    "25": {
      "doc_id": "1",
      "index": 24,
      "vector_index": 24,
      "text": "주피터노트북의 노트에 수식에 포함되어 있을 때 PDF 내보내기 시 에러가 나서 설치가 필요함 MiKTex \nhttps://miktex.org/download\nhttps://github.com/jgm/pandoc/releases/tag/3.4\n=> 결국 포기함\n=> 그냥 html 파일로 저장 후에 다시 웹브라우저로 읽고, PDF로 저장하는 방식으로 해결\n\n\n...",
      "created_at": "20250407_112508"
    },
    "26": {
      "doc_id": "1",
      "index": 25,
      "vector_index": 25,
      "text": "진다\n오답이 나오는 것을 좋아한다. 바로 오답노트에 정리한다.\n휴식 시간을 반드시 지킨다.\nhttps://www.youtube.com/watch?v=MRTQ-mCi2Mk\n\n\n알고e즘: 밤샘 게임 꼴찌에서 1년만에 전교 5등(😀😀😀) #공부왕도\nhttps://www.youtube.com/watch?v=80VxRM4caaI\n* 국어/문학 공부법\n* 모방하기\n\n...",
      "created_at": "20250407_112508"
    },
    "27": {
      "doc_id": "1",
      "index": 26,
      "vector_index": 26,
      "text": "* 중학교 게임랭킹 1위\n* 공부법 향상법과 수기를 봄 -> 학원 다니지 않고 혼자 공부하겠다고 선언\n* 열심히만 했지만 성적 안좋음 -> 나를 아는 것 필요 -> 공부 느낀점 일기\n    * 자신에 대한 격려의 글\n    * 문제점 파악 -> 해결을 위한 방법/체크리스트 작성 -> 공부습관 변화\n    * 아침 시간 100% 활용 + 공부 습관 형성\n\n\n...",
      "created_at": "20250407_112508"
    },
    "28": {
      "doc_id": "1",
      "index": 27,
      "vector_index": 27,
      "text": "로운 공식이 나올때마다 그 공식이 나오는 과정을 증명해봄\n    * 어려운 문제를 많이 풀었음 (쉬운 문제를 많이 푸는 것은 노동임)\n        * 하루가 걸리더라도 어려운 문제를 더 푼다 (심화/고난이도 문제 위주)\n        * 문제 하나 푸는데 1주일이 걸리기도 함 (답지를 최대한 안봄)\n        * 어렵게 풀면, 오랫동안 기억에 남음\n\n...",
      "created_at": "20250407_112508"
    },
    "29": {
      "doc_id": "1",
      "index": 28,
      "vector_index": 28,
      "text": "라함 → 친구 공부습관을 자기것으로\n    * 공부 습관을 위해서 쉬운 수학 문제집을 선택해서 풀기 시작함\n* 남보다 늦게 시작해서 더 많은 노력 필요했음\n    * 재수/삼수까지 함\n* 공부양을 2배로 늘림 \n\n\n성공한 사람들의 시간 관리 비법(이지영 강사, 😀) #자기계발\nhttps://www.youtube.com/watch?v=3GRt5XUKCPQ\n\n...",
      "created_at": "20250407_112508"
    },
    "30": {
      "doc_id": "1",
      "index": 29,
      "vector_index": 29,
      "text": "ed image 20240919181817.png]]\n\n\nGPT로 논문 쓰기\nhttps://www.youtube.com/watch?v=M0epTSZwI8A\n\n\n온누리 상품권 10% 할인 #쇼핑 \nhttps://youtube.com/shorts/JSXKwdjmOfg?si=wgaLS-3VERR6rOPs\n\n\n물신청 : 물풍선 앱 #쇼핑\n=> 그렇게 싸지 않음\n\n...",
      "created_at": "20250407_112508"
    },
    "31": {
      "doc_id": "2",
      "index": 0,
      "vector_index": 30,
      "text": "오건영 추천 책\n\n\n산둥 수용소 : 이성적, 합리적인 사람들이 어떻게 환경에 따라 변화하는지를 보여줌\n일본 현대사 : 일본 만화\n사장학개론 : \n돈의 속성 : \n\n\n국고채 금리, 내일채움공제\n\n\n\n\n2025.03.07\n\n\n구글 아이콘\nhttps://fonts.gstatic.com/s/i/materialicons/search/v5/24px.svg\n\n\nhttp...",
      "created_at": "20250407_112656"
    },
    "32": {
      "doc_id": "2",
      "index": 1,
      "vector_index": 31,
      "text": "> 포트 포워딩 설정\n![[Pasted image 20250304211919.png]]\n1. DHCP -> 고정 IP\n2. 방화벽 고급 설정 : 인바운드 포트 열기\n\n\n2025.02.28\n\n\nLLaMA CPP 사용\nhttps://avocadaon.tistory.com/\n50\n\n\n2025.03.02\n\n\n삭제 안되는 파일 삭제 방법\n\n\n\n\n안전 모드로 접속\n\n...",
      "created_at": "20250407_112656"
    },
    "33": {
      "doc_id": "2",
      "index": 2,
      "vector_index": 32,
      "text": "elog.io/@telnturtle/%EC%9E%A1%EB%8B%B4-WSL-%EC%9E%AC%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\n\n\nWSL2로 업그레이드\n\n\nhttps://wikidocs.net/206696\n```\nD:\\dev>wsl --list\nLinux용 Windows 하위 시스템 배포:\nUbuntu-22.04(기본값)\n\n...",
      "created_at": "20250407_112656"
    },
    "34": {
      "doc_id": "2",
      "index": 3,
      "vector_index": 33,
      "text": ":\\dev>wsl --set-version Ubuntu-22.04 2\nWSL 2와의 주요 차이점에 대한 자세한 내용은 https://aka.ms/wsl2를 참조하세요\n\n\n변환이 진행 중입니다. 이 작업은 몇 분 정도 걸릴 수 있습니다.\n\n\n배포는 이미 요청된 버전입니다.\n오류 코드: Wsl/Service/WSL_E_VM_MODE_INVALID_STATE\n\n...",
      "created_at": "20250407_112656"
    },
    "35": {
      "doc_id": "2",
      "index": 4,
      "vector_index": 34,
      "text": "2025.02.28\n\n\nRedis 내용을 보는 프로그램\nhttps://github.com/microsoftarchive/redis/releases\n\n\n2025.02.24\n\n\n잘못 보낸돈 되찾기\n\n\nhttps://fins.kdic.or.kr/\n\n\n복싱 밴드 묶는 방법\n\n\nhttps://www.youtube.com/shorts/A1avKDWZ5JQ\n\n\n회사 3...",
      "created_at": "20250407_112656"
    },
    "36": {
      "doc_id": "2",
      "index": 5,
      "vector_index": 35,
      "text": "ROGIqlkw?pli=1&key=NDMzR3JwMUFVVTh2SHFoNXV1TVdzZUpQNHhTdlRB\n\n\nkt 라우터\n\n\n[Web발신]\n[KT고객센터] KT 와이파이(공유기) 설정메뉴 접속방법 안내\n\n\n안녕하세요.  고객님, KT입니다.\n\n\n■ 홈허브(또는 WiFi Home)계열의 KT공유기와 유선 또는 무선으로 연결된 상태에서 접속하여 확인 가능\n\n...",
      "created_at": "20250407_112656"
    },
    "37": {
      "doc_id": "2",
      "index": 6,
      "vector_index": 36,
      "text": "홈허브 계열 초기값 사용자 ID: ktuser, 비밀번호: megaap\n\n\n☞ 앱 간편문의: https://kt.com/9plf\n\n\n☎ 전화문의: 고객센터 100\n\n\n항상 KT와 함께해 주셔서 감사합니다.\n\n\n[KT, 당신과_미래 사이에] 컨설턴트 윤정희 드림\n\n\n나이 계산기\n\n\nhttps://superkts.com/cal/man_age/20070903\n\n...",
      "created_at": "20250407_112656"
    },
    "38": {
      "doc_id": "2",
      "index": 7,
      "vector_index": 37,
      "text": "을 확인한 후, USB 드라이브를 선택합니다. 'select disk X' (X는 USB 드라이브 번호) 명령어를 사용한 후 'list partition'으로 파티션 목록을 확인하고, 'select partition Y' (Y는 삭제할 파티션 번호) 명령어를 입력한 후 'delete partition'을 입력하여 파티션을 삭제합니다. [\nEaseUS\n]\n\n...",
      "created_at": "20250407_112656"
    },
    "39": {
      "doc_id": "2",
      "index": 8,
      "vector_index": 38,
      "text": "티션을 삭제하고, '작업 실행' 버튼을 클릭하여 변경 사항을 적용합니다. 이 도구는 사용하기 쉬우며, 다양한 디스크 관리 기능을 제공합니다. [\nEaseUS\n]\n\n\n🔄 \nDiskpart로 파티션 합치기\n\n\n-Diskpart를 사용하여 파티션을 합치려면, 먼저 삭제할 파티션을 선택하고 삭제한 후, 확장할 파티션을 선택하여 확장합니다. [\n네이버 블로그\n]\n\n...",
      "created_at": "20250407_112656"
    },
    "40": {
      "doc_id": "2",
      "index": 9,
      "vector_index": 39,
      "text": "선택한 볼륨을 삭제하여 할당되지 않은 공간으로 만듭니다.\n\n\n3️⃣ \nStep 3\n: 파티션 확장\n\n\n-'list partition' 명령어로 파티션 목록을 확인하고, 'select partition Y' (Y는 확장할 파티션 번호) 명령어로 확장할 파티션을 선택합니다. 'extend' 명령어를 사용하여 선택한 파티션을 확장합니다. [\n네이버 블로그\n]\n\n...",
      "created_at": "20250407_112656"
    },
    "41": {
      "doc_id": "2",
      "index": 10,
      "vector_index": 40,
      "text": "uct/%EC%9B%8C%ED%81%AC%EB%A1%9C%EA%B7%B8-%ED%95%98%ED%94%84-%EB%8B%A4%EC%9D%B4%EC%96%B4%EB%A6%AC-ver4-%EB%8D%B0%EC%9D%BC%EB%A6%AC/78/?srsltid=AfmBOoofOutCdsUDcX_fTp88gjO38GQz21vKbBV_j89qkwq4KPsCkpzo\n\n...",
      "created_at": "20250407_112656"
    },
    "42": {
      "doc_id": "2",
      "index": 11,
      "vector_index": 41,
      "text": "s import DatasetDict\n\n\ndevice_map = \"cpu\"\nmax_new_tokens = 64\n\n\ndef generate_response(prompt, model, tokenizer):\n    tokenized_prompt = tokenizer([prompt], return_tensors='pt')\n   , shape = [1, 261]\n\n...",
      "created_at": "20250407_112656"
    },
    "43": {
      "doc_id": "2",
      "index": 12,
      "vector_index": 42,
      "text": "로 바꿔서 리턴함\n# Stripping the input text from generated_ids\ngenerated_ids = [\n    output_ids[len(input_ids):] for input_ids, output_ids in zip(tokenized_prompt.input_ids, generated_ids)\n]\n# shape = [64]\n\n...",
      "created_at": "20250407_112656"
    },
    "44": {
      "doc_id": "2",
      "index": 13,
      "vector_index": 43,
      "text": "LM.from_pretrained(\n    path_pretrained_model,\n    device_map=device_map\n)\n\n\nLoading the tokenizer\n\n\ntokenizer = AutoTokenizer.from_pretrained(\n    path_pretrained_model,\n    device_map=device_map\n)\n\n...",
      "created_at": "20250407_112656"
    },
    "45": {
      "doc_id": "2",
      "index": 14,
      "vector_index": 44,
      "text": "g=True, max_length=512),\n    batched=True,\n    remove_columns=dataset[\"train\"].column_names\n    )\ndata_collator = DataCollatorForLanguageModeling(tokenizer=tokenizer, mlm=False, return_tensors='pt')\n\n...",
      "created_at": "20250407_112656"
    },
    "46": {
      "doc_id": "2",
      "index": 15,
      "vector_index": 45,
      "text": "_epochs=100,\n    per_device_train_batch_size=4,\n    use_cpu=True,\n    save_strategy=\"no\"\n)\n\n\ntrainer = Trainer(model, train_dataset=dataset['train'], args=training_args, data_collator=data_collator)\n\n...",
      "created_at": "20250407_112656"
    },
    "47": {
      "doc_id": "2",
      "index": 16,
      "vector_index": 46,
      "text": "mu75oOX9\n\n\n20241026\n\n\n한국어 LLM 리더 보드\n\n\nhttps://huggingface.co/spaces/upstage/open-ko-llm-leaderboard\nhttps://github.com/NomaDamas/awesome-korean-llm\nhttps://huggingface.co/EleutherAI/polyglot-ko-3.8b\n\n...",
      "created_at": "20250407_112656"
    },
    "48": {
      "doc_id": "2",
      "index": 17,
      "vector_index": 47,
      "text": "장 내용 : \n    - 각종 웹사이트: 아이디, 암호, 설명 \n    - 이메일 계정: 이메일 주소, 암호, 설명\n    - 자주 까먹는 기록 : 주소, 여권번호 등\n- 검색 : \n    - 각 암호는 웹사이트 이름이나 URL 등을 1글자 입력할 때마다 검색되어서 화면에 보여줘야 해. \n    - 검색된 목록 중에 하나를 선택하면 전체 정보가 보이면 돼....",
      "created_at": "20250407_112656"
    },
    "49": {
      "doc_id": "2",
      "index": 18,
      "vector_index": 48,
      "text": "에서는 전체 내용이 보여야 해\n    - 메인 화면에는 검색과 데이터 그룹을 필터링할 수 있는 기능이 있어야 해.\n- 최초 앱 실행 시 \"로그인\" :\n    - 로그인은 \"지문 인식\"으로 가능해야 해.\n        - 최초 지문 등록 과정이 필요 해\n    - 최초 앱 실행 시 로그인에 성공하면, 앱을 종료하기 전까지는 다시 로그인을 할 필요가 없엄.\n\n...",
      "created_at": "20250407_112656"
    },
    "50": {
      "doc_id": "2",
      "index": 19,
      "vector_index": 49,
      "text": "nts:\n        MSVC v142 - VS 2019 C++ x64/x86 build tools\n         - If there are multiple build tool versions available, install the latest\n        C++ CMake tools for Windows\n        Windows 10 SDK\n\n...",
      "created_at": "20250407_112656"
    },
    "51": {
      "doc_id": "2",
      "index": 20,
      "vector_index": 50,
      "text": "ath/artificial_intelligence.xml\nhttps://www.techrepublic.com/rssfeeds/topic/artificial-intelligence/\nhttps://techcrunch.com/tag/artificial-intelligence/feed/\nhttps://www.reddit.com/r/artificial/.rss\n\n...",
      "created_at": "20250407_112656"
    },
    "52": {
      "doc_id": "2",
      "index": 21,
      "vector_index": 51,
      "text": "9002051.png]]\n![[Pasted image 20241019002118.png]]\n![[Pasted image 20241019002200.png]]\n![[Pasted image 20241019002244.png]]\n![[Pasted image 20241019002422.png]]\n![[Pasted image 20241019002546.png]]\n\n...",
      "created_at": "20250407_112656"
    },
    "53": {
      "doc_id": "2",
      "index": 22,
      "vector_index": 52,
      "text": "항목 위치 입력'에 아래 내용 입력\n\nshutdown -s -t 0\n\n1주일에 한번은 Shift 누르고 전원 > \"다시 시작\"을 눌러서 재부팅 후 아래 화면처럼 뜨면 \"PC 끄기\"를 실행한다.\n![[Pasted image 20241019004114.png]]\n\n\n\n\n\n\n꿀을 먹고 싶다면 꿀통을 발로 차지 마라\n    => 비난은 사람을 기운 빠지게 한다\n\n...",
      "created_at": "20250407_112656"
    },
    "54": {
      "doc_id": "2",
      "index": 23,
      "vector_index": 53,
      "text": "전세금 받기\n\n\nhttps://youtube.com/shorts/5Xl-0rYEcFo?si=-GnWv8OJHgqB0Ob-\n\n\n마인드맵\n\n\nhttps://youtube.com/shorts/5Xl-0rYEcFo?si=-GnWv8OJHgqB0Ob-\n\n\n실용적인 한국어 모델 3종\n\n\nhttps://www.youtube.com/watch?v=eNxAgYBdJ2A\n\n...",
      "created_at": "20250407_112656"
    },
    "55": {
      "doc_id": "2",
      "index": 24,
      "vector_index": 54,
      "text": "주피터노트북의 노트에 수식에 포함되어 있을 때 PDF 내보내기 시 에러가 나서 설치가 필요함 MiKTex \nhttps://miktex.org/download\nhttps://github.com/jgm/pandoc/releases/tag/3.4\n=> 결국 포기함\n=> 그냥 html 파일로 저장 후에 다시 웹브라우저로 읽고, PDF로 저장하는 방식으로 해결\n\n\n...",
      "created_at": "20250407_112656"
    },
    "56": {
      "doc_id": "2",
      "index": 25,
      "vector_index": 55,
      "text": "진다\n오답이 나오는 것을 좋아한다. 바로 오답노트에 정리한다.\n휴식 시간을 반드시 지킨다.\nhttps://www.youtube.com/watch?v=MRTQ-mCi2Mk\n\n\n알고e즘: 밤샘 게임 꼴찌에서 1년만에 전교 5등(😀😀😀) #공부왕도\nhttps://www.youtube.com/watch?v=80VxRM4caaI\n* 국어/문학 공부법\n* 모방하기\n\n...",
      "created_at": "20250407_112656"
    },
    "57": {
      "doc_id": "2",
      "index": 26,
      "vector_index": 56,
      "text": "* 중학교 게임랭킹 1위\n* 공부법 향상법과 수기를 봄 -> 학원 다니지 않고 혼자 공부하겠다고 선언\n* 열심히만 했지만 성적 안좋음 -> 나를 아는 것 필요 -> 공부 느낀점 일기\n    * 자신에 대한 격려의 글\n    * 문제점 파악 -> 해결을 위한 방법/체크리스트 작성 -> 공부습관 변화\n    * 아침 시간 100% 활용 + 공부 습관 형성\n\n\n...",
      "created_at": "20250407_112656"
    },
    "58": {
      "doc_id": "2",
      "index": 27,
      "vector_index": 57,
      "text": "로운 공식이 나올때마다 그 공식이 나오는 과정을 증명해봄\n    * 어려운 문제를 많이 풀었음 (쉬운 문제를 많이 푸는 것은 노동임)\n        * 하루가 걸리더라도 어려운 문제를 더 푼다 (심화/고난이도 문제 위주)\n        * 문제 하나 푸는데 1주일이 걸리기도 함 (답지를 최대한 안봄)\n        * 어렵게 풀면, 오랫동안 기억에 남음\n\n...",
      "created_at": "20250407_112656"
    },
    "59": {
      "doc_id": "2",
      "index": 28,
      "vector_index": 58,
      "text": "라함 → 친구 공부습관을 자기것으로\n    * 공부 습관을 위해서 쉬운 수학 문제집을 선택해서 풀기 시작함\n* 남보다 늦게 시작해서 더 많은 노력 필요했음\n    * 재수/삼수까지 함\n* 공부양을 2배로 늘림 \n\n\n성공한 사람들의 시간 관리 비법(이지영 강사, 😀) #자기계발\nhttps://www.youtube.com/watch?v=3GRt5XUKCPQ\n\n...",
      "created_at": "20250407_112656"
    },
    "60": {
      "doc_id": "2",
      "index": 29,
      "vector_index": 59,
      "text": "ed image 20240919181817.png]]\n\n\nGPT로 논문 쓰기\nhttps://www.youtube.com/watch?v=M0epTSZwI8A\n\n\n온누리 상품권 10% 할인 #쇼핑 \nhttps://youtube.com/shorts/JSXKwdjmOfg?si=wgaLS-3VERR6rOPs\n\n\n물신청 : 물풍선 앱 #쇼핑\n=> 그렇게 싸지 않음\n\n...",
      "created_at": "20250407_112656"
    },
    "61": {
      "doc_id": "3",
      "index": 0,
      "vector_index": 60,
      "text": "오건영 추천 책\n\n\n산둥 수용소 : 이성적, 합리적인 사람들이 어떻게 환경에 따라 변화하는지를 보여줌\n일본 현대사 : 일본 만화\n사장학개론 : \n돈의 속성 : \n\n\n국고채 금리, 내일채움공제\n\n\n\n\n2025.03.07\n\n\n구글 아이콘\nhttps://fonts.gstatic.com/s/i/materialicons/search/v5/24px.svg\n\n\nhttp...",
      "created_at": "20250407_112817",
      "chunk_id": "61"
    },
    "62": {
      "doc_id": "3",
      "index": 1,
      "vector_index": 61,
      "text": "> 포트 포워딩 설정\n![[Pasted image 20250304211919.png]]\n1. DHCP -> 고정 IP\n2. 방화벽 고급 설정 : 인바운드 포트 열기\n\n\n2025.02.28\n\n\nLLaMA CPP 사용\nhttps://avocadaon.tistory.com/\n50\n\n\n2025.03.02\n\n\n삭제 안되는 파일 삭제 방법\n\n\n\n\n안전 모드로 접속\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "62"
    },
    "63": {
      "doc_id": "3",
      "index": 2,
      "vector_index": 62,
      "text": "elog.io/@telnturtle/%EC%9E%A1%EB%8B%B4-WSL-%EC%9E%AC%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\n\n\nWSL2로 업그레이드\n\n\nhttps://wikidocs.net/206696\n```\nD:\\dev>wsl --list\nLinux용 Windows 하위 시스템 배포:\nUbuntu-22.04(기본값)\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "63"
    },
    "64": {
      "doc_id": "3",
      "index": 3,
      "vector_index": 63,
      "text": ":\\dev>wsl --set-version Ubuntu-22.04 2\nWSL 2와의 주요 차이점에 대한 자세한 내용은 https://aka.ms/wsl2를 참조하세요\n\n\n변환이 진행 중입니다. 이 작업은 몇 분 정도 걸릴 수 있습니다.\n\n\n배포는 이미 요청된 버전입니다.\n오류 코드: Wsl/Service/WSL_E_VM_MODE_INVALID_STATE\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "64"
    },
    "65": {
      "doc_id": "3",
      "index": 4,
      "vector_index": 64,
      "text": "2025.02.28\n\n\nRedis 내용을 보는 프로그램\nhttps://github.com/microsoftarchive/redis/releases\n\n\n2025.02.24\n\n\n잘못 보낸돈 되찾기\n\n\nhttps://fins.kdic.or.kr/\n\n\n복싱 밴드 묶는 방법\n\n\nhttps://www.youtube.com/shorts/A1avKDWZ5JQ\n\n\n회사 3...",
      "created_at": "20250407_112817",
      "chunk_id": "65"
    },
    "66": {
      "doc_id": "3",
      "index": 5,
      "vector_index": 65,
      "text": "ROGIqlkw?pli=1&key=NDMzR3JwMUFVVTh2SHFoNXV1TVdzZUpQNHhTdlRB\n\n\nkt 라우터\n\n\n[Web발신]\n[KT고객센터] KT 와이파이(공유기) 설정메뉴 접속방법 안내\n\n\n안녕하세요.  고객님, KT입니다.\n\n\n■ 홈허브(또는 WiFi Home)계열의 KT공유기와 유선 또는 무선으로 연결된 상태에서 접속하여 확인 가능\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "66"
    },
    "67": {
      "doc_id": "3",
      "index": 6,
      "vector_index": 66,
      "text": "홈허브 계열 초기값 사용자 ID: ktuser, 비밀번호: megaap\n\n\n☞ 앱 간편문의: https://kt.com/9plf\n\n\n☎ 전화문의: 고객센터 100\n\n\n항상 KT와 함께해 주셔서 감사합니다.\n\n\n[KT, 당신과_미래 사이에] 컨설턴트 윤정희 드림\n\n\n나이 계산기\n\n\nhttps://superkts.com/cal/man_age/20070903\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "67"
    },
    "68": {
      "doc_id": "3",
      "index": 7,
      "vector_index": 67,
      "text": "을 확인한 후, USB 드라이브를 선택합니다. 'select disk X' (X는 USB 드라이브 번호) 명령어를 사용한 후 'list partition'으로 파티션 목록을 확인하고, 'select partition Y' (Y는 삭제할 파티션 번호) 명령어를 입력한 후 'delete partition'을 입력하여 파티션을 삭제합니다. [\nEaseUS\n]\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "68"
    },
    "69": {
      "doc_id": "3",
      "index": 8,
      "vector_index": 68,
      "text": "티션을 삭제하고, '작업 실행' 버튼을 클릭하여 변경 사항을 적용합니다. 이 도구는 사용하기 쉬우며, 다양한 디스크 관리 기능을 제공합니다. [\nEaseUS\n]\n\n\n🔄 \nDiskpart로 파티션 합치기\n\n\n-Diskpart를 사용하여 파티션을 합치려면, 먼저 삭제할 파티션을 선택하고 삭제한 후, 확장할 파티션을 선택하여 확장합니다. [\n네이버 블로그\n]\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "69"
    },
    "70": {
      "doc_id": "3",
      "index": 9,
      "vector_index": 69,
      "text": "선택한 볼륨을 삭제하여 할당되지 않은 공간으로 만듭니다.\n\n\n3️⃣ \nStep 3\n: 파티션 확장\n\n\n-'list partition' 명령어로 파티션 목록을 확인하고, 'select partition Y' (Y는 확장할 파티션 번호) 명령어로 확장할 파티션을 선택합니다. 'extend' 명령어를 사용하여 선택한 파티션을 확장합니다. [\n네이버 블로그\n]\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "70"
    },
    "71": {
      "doc_id": "3",
      "index": 10,
      "vector_index": 70,
      "text": "uct/%EC%9B%8C%ED%81%AC%EB%A1%9C%EA%B7%B8-%ED%95%98%ED%94%84-%EB%8B%A4%EC%9D%B4%EC%96%B4%EB%A6%AC-ver4-%EB%8D%B0%EC%9D%BC%EB%A6%AC/78/?srsltid=AfmBOoofOutCdsUDcX_fTp88gjO38GQz21vKbBV_j89qkwq4KPsCkpzo\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "71"
    },
    "72": {
      "doc_id": "3",
      "index": 11,
      "vector_index": 71,
      "text": "s import DatasetDict\n\n\ndevice_map = \"cpu\"\nmax_new_tokens = 64\n\n\ndef generate_response(prompt, model, tokenizer):\n    tokenized_prompt = tokenizer([prompt], return_tensors='pt')\n   , shape = [1, 261]\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "72"
    },
    "73": {
      "doc_id": "3",
      "index": 12,
      "vector_index": 72,
      "text": "로 바꿔서 리턴함\n# Stripping the input text from generated_ids\ngenerated_ids = [\n    output_ids[len(input_ids):] for input_ids, output_ids in zip(tokenized_prompt.input_ids, generated_ids)\n]\n# shape = [64]\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "73"
    },
    "74": {
      "doc_id": "3",
      "index": 13,
      "vector_index": 73,
      "text": "LM.from_pretrained(\n    path_pretrained_model,\n    device_map=device_map\n)\n\n\nLoading the tokenizer\n\n\ntokenizer = AutoTokenizer.from_pretrained(\n    path_pretrained_model,\n    device_map=device_map\n)\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "74"
    },
    "75": {
      "doc_id": "3",
      "index": 14,
      "vector_index": 74,
      "text": "g=True, max_length=512),\n    batched=True,\n    remove_columns=dataset[\"train\"].column_names\n    )\ndata_collator = DataCollatorForLanguageModeling(tokenizer=tokenizer, mlm=False, return_tensors='pt')\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "75"
    },
    "76": {
      "doc_id": "3",
      "index": 15,
      "vector_index": 75,
      "text": "_epochs=100,\n    per_device_train_batch_size=4,\n    use_cpu=True,\n    save_strategy=\"no\"\n)\n\n\ntrainer = Trainer(model, train_dataset=dataset['train'], args=training_args, data_collator=data_collator)\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "76"
    },
    "77": {
      "doc_id": "3",
      "index": 16,
      "vector_index": 76,
      "text": "mu75oOX9\n\n\n20241026\n\n\n한국어 LLM 리더 보드\n\n\nhttps://huggingface.co/spaces/upstage/open-ko-llm-leaderboard\nhttps://github.com/NomaDamas/awesome-korean-llm\nhttps://huggingface.co/EleutherAI/polyglot-ko-3.8b\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "77"
    },
    "78": {
      "doc_id": "3",
      "index": 17,
      "vector_index": 77,
      "text": "장 내용 : \n    - 각종 웹사이트: 아이디, 암호, 설명 \n    - 이메일 계정: 이메일 주소, 암호, 설명\n    - 자주 까먹는 기록 : 주소, 여권번호 등\n- 검색 : \n    - 각 암호는 웹사이트 이름이나 URL 등을 1글자 입력할 때마다 검색되어서 화면에 보여줘야 해. \n    - 검색된 목록 중에 하나를 선택하면 전체 정보가 보이면 돼....",
      "created_at": "20250407_112817",
      "chunk_id": "78"
    },
    "79": {
      "doc_id": "3",
      "index": 18,
      "vector_index": 78,
      "text": "에서는 전체 내용이 보여야 해\n    - 메인 화면에는 검색과 데이터 그룹을 필터링할 수 있는 기능이 있어야 해.\n- 최초 앱 실행 시 \"로그인\" :\n    - 로그인은 \"지문 인식\"으로 가능해야 해.\n        - 최초 지문 등록 과정이 필요 해\n    - 최초 앱 실행 시 로그인에 성공하면, 앱을 종료하기 전까지는 다시 로그인을 할 필요가 없엄.\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "79"
    },
    "80": {
      "doc_id": "3",
      "index": 19,
      "vector_index": 79,
      "text": "nts:\n        MSVC v142 - VS 2019 C++ x64/x86 build tools\n         - If there are multiple build tool versions available, install the latest\n        C++ CMake tools for Windows\n        Windows 10 SDK\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "80"
    },
    "81": {
      "doc_id": "3",
      "index": 20,
      "vector_index": 80,
      "text": "ath/artificial_intelligence.xml\nhttps://www.techrepublic.com/rssfeeds/topic/artificial-intelligence/\nhttps://techcrunch.com/tag/artificial-intelligence/feed/\nhttps://www.reddit.com/r/artificial/.rss\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "81"
    },
    "82": {
      "doc_id": "3",
      "index": 21,
      "vector_index": 81,
      "text": "9002051.png]]\n![[Pasted image 20241019002118.png]]\n![[Pasted image 20241019002200.png]]\n![[Pasted image 20241019002244.png]]\n![[Pasted image 20241019002422.png]]\n![[Pasted image 20241019002546.png]]\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "82"
    },
    "83": {
      "doc_id": "3",
      "index": 22,
      "vector_index": 82,
      "text": "항목 위치 입력'에 아래 내용 입력\n\nshutdown -s -t 0\n\n1주일에 한번은 Shift 누르고 전원 > \"다시 시작\"을 눌러서 재부팅 후 아래 화면처럼 뜨면 \"PC 끄기\"를 실행한다.\n![[Pasted image 20241019004114.png]]\n\n\n\n\n\n\n꿀을 먹고 싶다면 꿀통을 발로 차지 마라\n    => 비난은 사람을 기운 빠지게 한다\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "83"
    },
    "84": {
      "doc_id": "3",
      "index": 23,
      "vector_index": 83,
      "text": "전세금 받기\n\n\nhttps://youtube.com/shorts/5Xl-0rYEcFo?si=-GnWv8OJHgqB0Ob-\n\n\n마인드맵\n\n\nhttps://youtube.com/shorts/5Xl-0rYEcFo?si=-GnWv8OJHgqB0Ob-\n\n\n실용적인 한국어 모델 3종\n\n\nhttps://www.youtube.com/watch?v=eNxAgYBdJ2A\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "84"
    },
    "85": {
      "doc_id": "3",
      "index": 24,
      "vector_index": 84,
      "text": "주피터노트북의 노트에 수식에 포함되어 있을 때 PDF 내보내기 시 에러가 나서 설치가 필요함 MiKTex \nhttps://miktex.org/download\nhttps://github.com/jgm/pandoc/releases/tag/3.4\n=> 결국 포기함\n=> 그냥 html 파일로 저장 후에 다시 웹브라우저로 읽고, PDF로 저장하는 방식으로 해결\n\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "85"
    },
    "86": {
      "doc_id": "3",
      "index": 25,
      "vector_index": 85,
      "text": "진다\n오답이 나오는 것을 좋아한다. 바로 오답노트에 정리한다.\n휴식 시간을 반드시 지킨다.\nhttps://www.youtube.com/watch?v=MRTQ-mCi2Mk\n\n\n알고e즘: 밤샘 게임 꼴찌에서 1년만에 전교 5등(😀😀😀) #공부왕도\nhttps://www.youtube.com/watch?v=80VxRM4caaI\n* 국어/문학 공부법\n* 모방하기\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "86"
    },
    "87": {
      "doc_id": "3",
      "index": 26,
      "vector_index": 86,
      "text": "* 중학교 게임랭킹 1위\n* 공부법 향상법과 수기를 봄 -> 학원 다니지 않고 혼자 공부하겠다고 선언\n* 열심히만 했지만 성적 안좋음 -> 나를 아는 것 필요 -> 공부 느낀점 일기\n    * 자신에 대한 격려의 글\n    * 문제점 파악 -> 해결을 위한 방법/체크리스트 작성 -> 공부습관 변화\n    * 아침 시간 100% 활용 + 공부 습관 형성\n\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "87"
    },
    "88": {
      "doc_id": "3",
      "index": 27,
      "vector_index": 87,
      "text": "로운 공식이 나올때마다 그 공식이 나오는 과정을 증명해봄\n    * 어려운 문제를 많이 풀었음 (쉬운 문제를 많이 푸는 것은 노동임)\n        * 하루가 걸리더라도 어려운 문제를 더 푼다 (심화/고난이도 문제 위주)\n        * 문제 하나 푸는데 1주일이 걸리기도 함 (답지를 최대한 안봄)\n        * 어렵게 풀면, 오랫동안 기억에 남음\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "88"
    },
    "89": {
      "doc_id": "3",
      "index": 28,
      "vector_index": 88,
      "text": "라함 → 친구 공부습관을 자기것으로\n    * 공부 습관을 위해서 쉬운 수학 문제집을 선택해서 풀기 시작함\n* 남보다 늦게 시작해서 더 많은 노력 필요했음\n    * 재수/삼수까지 함\n* 공부양을 2배로 늘림 \n\n\n성공한 사람들의 시간 관리 비법(이지영 강사, 😀) #자기계발\nhttps://www.youtube.com/watch?v=3GRt5XUKCPQ\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "89"
    },
    "90": {
      "doc_id": "3",
      "index": 29,
      "vector_index": 89,
      "text": "ed image 20240919181817.png]]\n\n\nGPT로 논문 쓰기\nhttps://www.youtube.com/watch?v=M0epTSZwI8A\n\n\n온누리 상품권 10% 할인 #쇼핑 \nhttps://youtube.com/shorts/JSXKwdjmOfg?si=wgaLS-3VERR6rOPs\n\n\n물신청 : 물풍선 앱 #쇼핑\n=> 그렇게 싸지 않음\n\n...",
      "created_at": "20250407_112817",
      "chunk_id": "90"
    },
    "91": {
      "doc_id": "4",
      "index": 0,
      "vector_index": 90,
      "text": "Flutter 교육자료\n\n\nFlutter는 \n앱을 만들 때 화면에 보이는 모든 요소를 “위젯(widget)”이라고 부릅니다.\n 위젯은 버튼, 텍스트, 이미지 등 모든 UI(사용자 인터페이스) 요소를 의미하며, 이를 조합해서 멋진 앱을 만들 수 있습니다.\n\n\n아래 목차에 따라 하나씩 알아보도록 합시다!\n\n\n\n\n1. 기본 위젯의 이해 및 활용\n\n\n배경 및 상세...",
      "created_at": "20250407_123105"
    },
    "92": {
      "doc_id": "4",
      "index": 1,
      "vector_index": 91,
      "text": "UI 요소를 간단하게 조합할 수 있어요.\n\n\n언제 사용해야 하는가?\n: 앱을 만들 때 화면에 표시되는 모든 요소(버튼, 텍스트, 이미지 등)는 위젯으로 구현합니다.\n\n\n사용 시 주의할 점\n:\n\n\n위젯은 보통 “불변(immutable)”입니다. 즉, 한 번 생성되면 내부 상태를 직접 바꾸지 않고, 상태 관리(Stateful 위젯 등)를 통해 변경합니다.\n\n\n...",
      "created_at": "20250407_123105"
    },
    "93": {
      "doc_id": "4",
      "index": 2,
      "vector_index": 92,
      "text": ",\n        // 중앙에 텍스트를 표시합니다.\n        body: Center(\n          child: Text(\n            '안녕하세요, Flutter!',\n            style: TextStyle(fontSize: 24),\n          ),\n        ),\n      ),\n    );\n  }\n}\n```\n\n...",
      "created_at": "20250407_123105"
    },
    "94": {
      "doc_id": "4",
      "index": 3,
      "vector_index": 93,
      "text": "배경\n: 별도의 설치 없이 웹 브라우저에서 Flutter/Dart 코드를 실습할 수 있는 환경입니다.\n\n\n사용 방법\n: \nDartPad\n로 접속하여 코드를 입력하고 바로 실행해 볼 수 있습니다.\n\n\n주의 사항\n: 일부 패키지나 네이티브 기능은 DartPad에서 지원되지 않을 수 있습니다.\n\n\n\n\n1.1.2 로컬 컴퓨터 실습 환경 (Windows)\n\n\n\n\nv...",
      "created_at": "20250407_123105"
    },
    "95": {
      "doc_id": "4",
      "index": 4,
      "vector_index": 94,
      "text": "my_flutter_app\n\n\n\n\n\n\n그러면 \nmy_flutter_app\n이라는 새 프로젝트가 생성됩니다.\n\n\n\n\n기본 폴더 구조\n\n\nlib 폴더\n: 주로 Dart 코드가 들어있는 폴더이며, \nmain.dart\n 파일이 앱 실행의 시작점입니다.\n\n\npubspec.yaml\n: 앱에 필요한 외부 라이브러리나 에셋(이미지, 폰트 등)을 관리하는 파일입니다.\n\n\n...",
      "created_at": "20250407_123105"
    },
    "96": {
      "doc_id": "4",
      "index": 5,
      "vector_index": 95,
      "text": "xt 위젯\n\n\n2.1.1 Text 위젯의 출력 다루기\n\n\n\n\n\n\n배경 및 설명\n:\n\n    Text 위젯은 화면에 글씨를 출력할 때 사용됩니다.\n\n\n\n\n\n\n왜 사용해야 하는가?\n:\n\n    앱에서 정보를 전달하거나 제목, 설명 등 텍스트를 보여줄 때 꼭 필요합니다.\n\n\n\n\n\n\n언제 사용해야 하는가?\n:\n\n    글자를 보여주고자 할 때 항상 사용합니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "97": {
      "doc_id": "4",
      "index": 6,
      "vector_index": 96,
      "text": "Style(fontSize: 24),\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    위 코드를 실행하면 “Hello, Flutter!”라는 텍스트가 24포인트 크기로 화면에 출력됩니다.\n\n\n\n\n\n\n2.1.2 Text 위젯의 스타일 변경하기\n\n\n\n\n\n\n배경 및 설명\n:\n\n    Text 위젯은 글자 색, 굵기, 크기 등 다양한 스타일을 변경할 수 있습니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "98": {
      "doc_id": "4",
      "index": 7,
      "vector_index": 97,
      "text": "Text(\n  '멋진 Flutter',\n  style: TextStyle(\n    color: Colors.blue,\n    fontWeight: FontWeight.bold,\n    fontSize: 30,\n  ),\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    “멋진 Flutter”라는 텍스트가 파란색, 굵은 글씨, 크기 30으로 화면에 표시됩니다.\n\n\n...",
      "created_at": "20250407_123105"
    },
    "99": {
      "doc_id": "4",
      "index": 8,
      "vector_index": 98,
      "text": "xis\n: Row의 경우 가로, Column의 경우 세로 방향을 의미합니다.\n\n\nCross Axis\n: Main Axis와 수직인 반대 방향입니다.\n\n\n왜 사용해야 하는가?\n:\n\n위젯들을 원하는 방향으로 정렬하여 보기 좋게 배치할 수 있습니다.\n\n\n\n\n\n\n\n\n언제 사용해야 하는가?\n:\n\n    여러 위젯을 나란히(가로 혹은 세로) 정렬할 때 사용합니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "100": {
      "doc_id": "4",
      "index": 9,
      "vector_index": 99,
      "text": "gnment: MainAxisAlignment.center,\n  children: [\n    Text('첫 번째'),\n    Text('두 번째'),\n    Text('세 번째'),\n  ],\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    세 개의 텍스트가 가로 방향으로 중앙에 정렬되어 표시됩니다.\n\n\n\n\n\n\n2.2.2 교차 축(CrossAxis) 정렬하기\n\n...",
      "created_at": "20250407_123105"
    },
    "101": {
      "doc_id": "4",
      "index": 10,
      "vector_index": 100,
      "text": "정렬할 때, 반대 방향의 정렬을 맞추어 균형있는 레이아웃을 만들기 위해서입니다.\n\n\n\n\n\n\n예제 코드\n:\n\n\ndart\nColumn(\n  crossAxisAlignment: CrossAxisAlignment.start,\n  children: [\n    Text('첫 번째'),\n    Text('두 번째'),\n    Text('세 번째'),\n  ],\n);\n\n\n...",
      "created_at": "20250407_123105"
    },
    "102": {
      "doc_id": "4",
      "index": 11,
      "vector_index": 101,
      "text": ".\n\n\n\n\n배경 및 설명\n:\n\n    여러 위젯을 겹쳐서 배치할 때 사용합니다.\n\n\n왜 사용해야 하는가?\n:\n\n    이미지 위에 텍스트를 올리거나, 여러 요소를 한 화면에 겹쳐 보여주고 싶을 때 유용합니다.\n\n\n주의 사항\n:\n\n    Stack 내부에서는 위치를 지정할 때 \nPositioned\n 위젯을 함께 사용합니다.\n\n\n\n\nPositioned 위젯\n\n...",
      "created_at": "20250407_123105"
    },
    "103": {
      "doc_id": "4",
      "index": 12,
      "vector_index": 102,
      "text": "0,\n      color: Colors.blue,\n    ),\n    Positioned(\n      top: 50,\n      left: 50,\n      child: Container(\n        width: 100,\n        height: 100,\n        color: Colors.red,\n      ),\n    ),\n  ],\n);\n\n...",
      "created_at": "20250407_123105"
    },
    "104": {
      "doc_id": "4",
      "index": 13,
      "vector_index": 103,
      "text": "en: [\n    Container(width: 100, height: 100, color: Colors.green),\n    Container(width: 100, height: 100, color: Colors.yellow),\n    Container(width: 100, height: 100, color: Colors.orange),\n  ],\n);\n\n...",
      "created_at": "20250407_123105"
    },
    "105": {
      "doc_id": "4",
      "index": 14,
      "vector_index": 104,
      "text": "많이 사용됩니다.\n\n\n\n\n\n\n주의 사항\n:\n\n    내부에 child 위젯을 배치하여 원하는 내용을 넣을 수 있습니다.\n\n\n\n\n\n\n예제 코드\n:\n\n\ndart\nContainer(\n  width: 150,\n  height: 150,\n  color: Colors.purple,\n  child: Center(child: Text('Container')),\n);\n\n\n...",
      "created_at": "20250407_123105"
    },
    "106": {
      "doc_id": "4",
      "index": 15,
      "vector_index": 105,
      "text": "만들기 위해서입니다.\n\n\n\n\n\n\n\n\n예제 코드\n:\n\n\ndart\nContainer(\n  color: Colors.blue,\n  margin: EdgeInsets.all(20),   // 바깥쪽 여백 20픽셀\n  padding: EdgeInsets.all(10),  // 안쪽 여백 10픽셀\n  child: Text('Margin과 Padding'),\n);\n\n\n...",
      "created_at": "20250407_123105"
    },
    "107": {
      "doc_id": "4",
      "index": 16,
      "vector_index": 106,
      "text": "1 이미지를 나타내는 Image 위젯\n\n\n3.1.1 이미지 맞춤 설정 (BoxFit 등)\n\n\n\n\n\n\n배경 및 설명\n:\n\n    Image 위젯은 이미지를 화면에 보여주며, \nBoxFit\n 속성을 이용해 이미지의 크기와 위치를 조절할 수 있습니다.\n\n\n\n\n\n\n왜 사용해야 하는가?\n:\n\n    이미지가 주어진 컨테이너 안에 잘 맞도록 표시하기 위해서입니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "108": {
      "doc_id": "4",
      "index": 17,
      "vector_index": 107,
      "text": "우도록 설정\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    네트워크에서 불러온 이미지가 컨테이너의 크기에 맞춰 꽉 차게 보여집니다.\n\n\n\n\n\n\n3.1.2 Asset 이미지 설정\n\n\n\n\n\n\n배경 및 설명\n:\n\n    앱 내부에 포함된 이미지를 사용하려면, 먼저 \npubspec.yaml\n 파일에 에셋(assets)을 등록해야 합니다.\n\n\n\n\n\n\n예제 코드\n:\n\n...",
      "created_at": "20250407_123105"
    },
    "109": {
      "doc_id": "4",
      "index": 18,
      "vector_index": 108,
      "text": "o.png\n 파일이 화면에 출력됩니다.\n\n\n\n\n\n\n3.1.3 Network 이미지 설정 (권한 설정 등)\n\n\n\n\n설명\n:\n\n    네트워크 이미지를 사용할 경우, 앱에서 인터넷 사용 권한이 필요할 수 있습니다. (예, AndroidManifest.xml에 인터넷 권한 추가)\n\n\n예제 코드\n:\n\n    위의 \nImage.network\n 예제를 참고하세요.\n\n...",
      "created_at": "20250407_123105"
    },
    "110": {
      "doc_id": "4",
      "index": 19,
      "vector_index": 109,
      "text": "ons.favorite,\n  color: Colors.red,\n  size: 30,\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    빨간 하트 모양의 아이콘이 30 크기로 나타납니다.\n\n\n\n\n\n\n3.2.2 버튼 위젯\n\n\n\n\n\n\n설명\n:\n\n    버튼은 사용자의 입력(클릭)을 받아 동작을 실행합니다.\n\n    Flutter에서는 여러 종류의 버튼이 있습니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "111": {
      "doc_id": "4",
      "index": 20,
      "vector_index": 110,
      "text": "예제 코드 (ElevatedButton)\n:\n\n\n\n\ndart\nElevatedButton(\n  onPressed: () {\n    print('버튼이 눌렸어요!');\n  },\n  child: Text('눌러봐요'),\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    “눌러봐요”라는 텍스트가 있는 버튼이 표시되고, 버튼을 누르면 콘솔에 메시지가 출력됩니다.\n\n\n\n\n...",
      "created_at": "20250407_123105"
    },
    "112": {
      "doc_id": "4",
      "index": 21,
      "vector_index": 111,
      "text": "ation\n: 입력창의 꾸밈 (예, labelText, border 등)\n\n\nonChanged\n: 입력할 때마다 호출되는 콜백\n\n\nonSubmitted\n: 엔터를 눌렀을 때 호출되는 콜백\n\n\ncontroller\n: 입력값을 관리하기 위한 컨트롤러\n\n\nkeyboardType\n, \ntextInputAction\n: 키보드 타입 및 동작 설정\n\n\n예제 코드\n:\n\n...",
      "created_at": "20250407_123105"
    },
    "113": {
      "doc_id": "4",
      "index": 22,
      "vector_index": 112,
      "text": "text');\n  },\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    테두리가 있는 텍스트 입력창이 나타나고, 사용자가 입력할 때마다 입력된 텍스트가 콘솔에 출력됩니다.\n\n\n\n\n\n\n3.2.4 TextEditingController\n\n\n\n\n\n\n설명\n:\n\n    TextEditingController는 TextField의 값을 제어하고 추적할 때 사용합니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "114": {
      "doc_id": "4",
      "index": 23,
      "vector_index": 113,
      "text": "입력하세요',\n  ),\n);\n```\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    위 코드는 텍스트 필드의 내용을 \nmyController\n를 통해 관리할 수 있게 해줍니다.\n\n\n\n\n\n\n3.2.5 TextFormField 위젯\n\n\n\n\n\n\n배경 및 설명\n:\n\n    TextFormField는 Form과 함께 사용되어 입력값 검증 등의 기능을 제공하는 위젯입니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "115": {
      "doc_id": "4",
      "index": 24,
      "vector_index": 114,
      "text": "lineInputBorder(),\n  ),\n  validator: (value) {\n    if (value == null || value.isEmpty) {\n      return '이메일을 입력해주세요';\n    }\n    return null;\n  },\n);\n\n\n\n\n\n\n3.2.6 Form과 함께 사용하는 TextFormField\n\n\n\n\n\n\n설명\n:\n\n...",
      "created_at": "20250407_123105"
    },
    "116": {
      "doc_id": "4",
      "index": 25,
      "vector_index": 115,
      "text": "edButton(\n        onPressed: () {\n          if (_formKey.currentState!.validate()) {\n            print('모든 입력이 올바릅니다!');\n          }\n        },\n        child: Text('제출'),\n      ),\n    ],\n  ),\n);\n```\n\n...",
      "created_at": "20250407_123105"
    },
    "117": {
      "doc_id": "4",
      "index": 26,
      "vector_index": 116,
      "text": "ateful 위젯\n\n\n4.1 Stateless 위젯\n\n\n4.1.1 Stateless 위젯의 특징 및 변화 과정\n\n\n\n\n\n\n배경 및 설명\n:\n\n    Stateless 위젯은 한 번 생성되면 내부 상태가 바뀌지 않는 정적인 위젯입니다.\n\n\n\n\n\n\n왜 사용해야 하는가?\n:\n\n    변화가 필요 없는 UI 요소(예: 단순 텍스트, 이미지 등)에 사용합니다.\n\n\n...",
      "created_at": "20250407_123105"
    },
    "118": {
      "doc_id": "4",
      "index": 27,
      "vector_index": 117,
      "text": "StatelessWidget extends StatelessWidget {\n  final String message;\n\n\nMyStatelessWidget({required this.message});\n\n\n@override\n  Widget build(BuildContext context) {\n    return Text(message);\n  }\n}\n```\n\n...",
      "created_at": "20250407_123105"
    },
    "119": {
      "doc_id": "4",
      "index": 28,
      "vector_index": 118,
      "text": "위젯 생성 → build 메소드 호출 → 필요 시 재구성 → 위젯 제거\n\n\n\n\n\n\n설명\n:\n\n    Stateless 위젯은 build 메소드가 단 한 번 호출되며, 내부 상태가 없기 때문에 재빌드 시에도 동일한 UI를 보여줍니다.\n\n\n\n\n\n\n4.2 Stateful 위젯\n\n\n4.2.1 Stateful 위젯의 특징 및 변화과정\n\n\n\n\n\n\n배경 및 설명\n:\n\n...",
      "created_at": "20250407_123105"
    },
    "120": {
      "doc_id": "4",
      "index": 29,
      "vector_index": 119,
      "text": "setState()\n를 호출하여 Flutter에게 변경 사항을 알려야 합니다.\n\n\n\n\n\n\n예제 코드\n:\n\n\n```dart\nclass MyStatefulWidget extends StatefulWidget {\n  @override\n  _MyStatefulWidgetState createState() => _MyStatefulWidgetState();\n}\n\n\n...",
      "created_at": "20250407_123105"
    },
    "121": {
      "doc_id": "4",
      "index": 30,
      "vector_index": 120,
      "text": "),\n        ElevatedButton(\n          onPressed: () {\n            setState(() {\n              counter++;\n            });\n          },\n          child: Text('증가'),\n        ),\n      ],\n    );\n  }\n}\n```\n\n...",
      "created_at": "20250407_123105"
    },
    "122": {
      "doc_id": "4",
      "index": 31,
      "vector_index": 121,
      "text": "생명 주기 과정\n:\n\n\n위젯 생성 → \ninitState()\n (초기화) → build 메소드 호출 → \nsetState()\n로 업데이트 → 필요 시 \ndispose()\n (정리)\n\n\n\n\n\n\n설명\n:\n\n\ninitState()\n에서 초기 작업을 하고, \ndispose()\n에서 자원 해제를 수행합니다.\n\n\n\n\n\n\n5. 플러터의 네비게이션과 화면 전환\n\n\n앱은 ...",
      "created_at": "20250407_123105"
    },
    "123": {
      "doc_id": "4",
      "index": 32,
      "vector_index": 122,
      "text": "웃 구성\n\n\n\n\n\n\n프로젝트 생성 (vs code)\n:\n\n\nbash\nflutter create my_app\n\n\n\n\n\n\n생성된 파일, 폴더 역할\n:\n\n\n\n\nlib/main.dart\n: 앱의 시작점\n\n\npubspec.yaml\n: 의존성 및 에셋 관리\n\n\n\n\n\n\n초기화 및 기본화면 생성\n:\n\n    MaterialApp을 사용해 앱의 기본 화면을 설정합니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "124": {
      "doc_id": "4",
      "index": 33,
      "vector_index": 123,
      "text": "Navigator.push(\n  context,\n  MaterialPageRoute(builder: (context) => SecondPage()),\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    버튼 클릭 등 이벤트에 의해 \nSecondPage\n로 화면이 전환됩니다.\n\n\n\n\n\n\n5.1.3 NamedRouter를 이용한 네비게이션 관리\n\n\n\n\n\n\n설명\n:\n\n...",
      "created_at": "20250407_123105"
    },
    "125": {
      "doc_id": "4",
      "index": 34,
      "vector_index": 124,
      "text": ": {\n    '/': (context) => HomePage(),\n    '/second': (context) => SecondPage(),\n  },\n);\n\n\n\n\n\n\n출력 결과 설명\n:\n\n\nNavigator.pushNamed(context, '/second')\n를 호출하면 \nSecondPage\n로 이동합니다.\n\n\n\n\n\n\n5.1.4 화면 간 데이터 전달\n\n...",
      "created_at": "20250407_123105"
    },
    "126": {
      "doc_id": "4",
      "index": 35,
      "vector_index": 125,
      "text": "tailPage(data: '전달된 데이터')),\n);\n\n\n\n\n\n\n\n\n\n\n방법 2: NamedRoute를 통한 데이터 전달\n\n\n\n\nRouteSettings를 이용하여 데이터를 전달할 수 있습니다.\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    새 페이지에서 전달받은 데이터를 화면에 표시할 수 있습니다.\n\n\n\n\n\n\n5.2 네비게이션 바\n\n\n5.2.1 AppBar\n\n...",
      "created_at": "20250407_123105"
    },
    "127": {
      "doc_id": "4",
      "index": 36,
      "vector_index": 126,
      "text": "xt('홈 화면'),\n    actions: [\n      IconButton(\n        icon: Icon(Icons.settings),\n        onPressed: () {\n          // 설정 페이지로 이동\n        },\n      ),\n    ],\n  ),\n  body: Center(child: Text('내용')),\n);\n\n...",
      "created_at": "20250407_123105"
    },
    "128": {
      "doc_id": "4",
      "index": 37,
      "vector_index": 127,
      "text": "모양이 변하는 유연한 AppBar입니다.\n\n\n주의 사항\n:\n\n    CustomScrollView와 함께 사용해야 합니다.\n\n\n\n\n\n\n5.3 탭 기반 네비게이션 구현\n\n\n5.3.1 상단 탭 네비게이션\n\n\n\n\n\n\n구현 단계 (4단계)\n:\n\n\n\n\nTabController 생성\n\n\nAppBar에 TabBar 추가\n\n\nTabBarView에 각 탭의 내용을 구성\n\n...",
      "created_at": "20250407_123105"
    },
    "129": {
      "doc_id": "4",
      "index": 38,
      "vector_index": 128,
      "text": "],\n      ),\n    ),\n    body: TabBarView(\n      children: [\n        Center(child: Text('자동차')),\n        Center(child: Text('대중교통')),\n        Center(child: Text('자전거')),\n      ],\n    ),\n  ),\n);\n\n\n\n\n\n\n출력...",
      "created_at": "20250407_123105"
    },
    "130": {
      "doc_id": "4",
      "index": 39,
      "vector_index": 129,
      "text": "n(Icons.search), label: '검색'),\n      BottomNavigationBarItem(icon: Icon(Icons.person), label: '마이'),\n    ],\n    onTap: (index) {\n      // 탭 전환 처리\n    },\n  ),\n  body: Center(child: Text('화면 내용')),\n);\n\n...",
      "created_at": "20250407_123105"
    },
    "131": {
      "doc_id": "4",
      "index": 40,
      "vector_index": 130,
      "text": "ext: context,\n      builder: (context) {\n        return Container(\n          height: 200,\n          child: Center(child: Text('하단 모달 화면')),\n        );\n      },\n    );\n  },\n  child: Text('모달 열기'),\n);\n\n...",
      "created_at": "20250407_123105"
    },
    "132": {
      "doc_id": "4",
      "index": 41,
      "vector_index": 131,
      "text": "() {\n                // 삭제 처리\n                Navigator.pop(context);\n              },\n              child: Text('확인'),\n            ),\n          ],\n        );\n      },\n    );\n  },\n  child: Text('대화상자 ...",
      "created_at": "20250407_123105"
    },
    "133": {
      "doc_id": "4",
      "index": 42,
      "vector_index": 132,
      "text": "10,\n          itemBuilder: (context, index) {\n            return ListTile(title: Text('리스트 아이템 $index'));\n          },\n        ),\n      ),\n      // TabBar 영역\n      Container(\n        height: 50,\n     ...",
      "created_at": "20250407_123105"
    },
    "134": {
      "doc_id": "4",
      "index": 43,
      "vector_index": 133,
      "text": "출력 결과 설명\n:\n\n    상단에는 ‘CategoryBar’ 영역, 가운데에는 스크롤 가능한 리스트, 하단에는 ‘TabBar’ 영역이 차례대로 표시됩니다.\n\n\n\n\n\n\n5.5.2 FeedIndex 화면 생성\n\n\n\n\n설명\n:\n\n    피드 목록(FeedIndex) 화면은 여러 피드 아이템을 나열하는 화면으로 ListView 등을 사용하여 구성합니다.\n\n\n\n\n...",
      "created_at": "20250407_123105"
    },
    "135": {
      "doc_id": "4",
      "index": 44,
      "vector_index": 134,
      "text": "const EdgeInsets.symmetric(horizontal: 8.0),\n          child: ElevatedButton(\n            onPressed: () {},\n            child: Text(cat),\n          ),\n        )).toList(),\n      ),\n    );\n  }\n}\n```\n\n\n...",
      "created_at": "20250407_123105"
    },
    "136": {
      "doc_id": "4",
      "index": 45,
      "vector_index": 135,
      "text": "상태(state)는 UI가 사용자 입력이나 데이터 변화에 따라 달라질 수 있는데, 이를 체계적으로 관리하는 것이 중요합니다.\n\n\n6.1 상태 관리의 필요성\n\n\n6.1.1 Stateful 위젯에서의 상태 관리\n\n\n\n\n\n\n배경 및 설명\n:\n\n    예를 들어, ListView.builder로 동적으로 아이템을 추가하거나 삭제할 때, 상태 관리가 필요합니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "137": {
      "doc_id": "4",
      "index": 46,
      "vector_index": 136,
      "text": "temListPageState();\n}\n\n\nclass _ItemListPageState extends State\n {\n  List\n items = ['Item 1', 'Item 2'];\n\n\nvoid _addItem() {\n    setState(() {\n      items.add('Item ${items.length + 1}');\n    });\n  }\n\n...",
      "created_at": "20250407_123105"
    },
    "138": {
      "doc_id": "4",
      "index": 47,
      "vector_index": 137,
      "text": "child: ListView.builder(\n            itemCount: items.length,\n            itemBuilder: (context, index) => ListTile(title: Text(items[index])),\n          ),\n        ),\n      ],\n    );\n  }\n}\n```\n\n\n\n\n\n\n...",
      "created_at": "20250407_123105"
    },
    "139": {
      "doc_id": "4",
      "index": 48,
      "vector_index": 138,
      "text": "드 목록 아이템을 선택하여 수정하는 화면을 구성할 때도 상태 관리가 필요합니다.\n\n\n주의 사항\n:\n\n    여러 화면에서 상태를 공유할 경우에는 전역 상태 관리 도구를 사용하는 것이 좋습니다.\n\n\n\n\n6.1.3 상태 관리의 필요성 (기본 개념)\n\n\n\n\n배경\n:\n\n    앱이 커지면 상태가 여러 곳에서 변화하므로, 이를 체계적으로 관리할 필요가 있습니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "140": {
      "doc_id": "4",
      "index": 49,
      "vector_index": 139,
      "text": "러리 관리\n\n\n\n\n설명\n:\n\n    필요한 외부 라이브러리(패키지)를 \npubspec.yaml\n 파일에 추가하고 \nflutter pub get\n 명령어를 통해 설치합니다.\n\n\n\n\n6.2.2 GetX(Get) 라이브러리 설치\n\n\n\n\n\n\n예제\n:\n\n\nyaml\ndependencies:\n  flutter:\n    sdk: flutter\n  get: ^4.6.5\n\n...",
      "created_at": "20250407_123105"
    },
    "141": {
      "doc_id": "4",
      "index": 50,
      "vector_index": 140,
      "text": "피드 목록을 관리하기 위해 GetX의 Controller 클래스를 생성하여 사용합니다.\n\n\n\n\n\n\n예제 코드\n:\n\n\n```dart\nimport 'package:get/get.dart';\n\n\nclass FeedController extends GetxController {\n  // 관찰 가능한 리스트\n  var feedList = \n[].obs;\n\n\nvoid...",
      "created_at": "20250407_123105"
    },
    "142": {
      "doc_id": "4",
      "index": 51,
      "vector_index": 141,
      "text": "X를 사용하는 화면에서 자동으로 변경 사항이 반영됩니다.\n\n\n\n\n\n\n6.3.2 피드 수정 페이지 상태 관리 개선\n\n\n\n\n설명\n:\n\n    피드 수정 화면에서도 GetX 컨트롤러를 사용해 상태를 관리하면 코드가 간결해집니다.\n\n\n\n\n\n\n7. 프로젝트 아키텍처와 폴더 구조 계획\n\n\n앱을 체계적으로 관리하기 위해 아키텍처 패턴과 폴더 구조를 미리 계획합니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "143": {
      "doc_id": "4",
      "index": 52,
      "vector_index": 142,
      "text": "다.\n\n\nBLoC (Business Logic Component)\n: 비즈니스 로직을 분리하여 관리합니다.\n\n\n\n\n\n\n왜 사용해야 하는가?\n:\n\n    코드의 재사용성과 유지보수를 높이기 위해서입니다.\n\n\n언제 사용해야 하는가?\n:\n\n    앱이 커지고 복잡해질 때, 명확한 역할 분담이 필요할 경우 사용합니다.\n\n\n\n\n7.2 프로젝트 구조 및 설정 파일\n\n...",
      "created_at": "20250407_123105"
    },
    "144": {
      "doc_id": "4",
      "index": 53,
      "vector_index": 143,
      "text": "로 파일을 관리합니다.\n\n\n\n\n7.3 Wireframe 및 Mockup 설계\n\n\n7.3.1 Wireframe\n\n\n\n\n설명\n:\n\n    앱의 화면 구성을 간단한 스케치나 다이어그램으로 먼저 설계하는 과정입니다.\n\n\n왜 사용해야 하는가?\n:\n\n    전체적인 레이아웃과 흐름을 미리 파악할 수 있습니다.\n\n\n\n\n7.3.2 디자인 시스템 및 컴포넌트 라이브러리\n\n...",
      "created_at": "20250407_123105"
    },
    "145": {
      "doc_id": "4",
      "index": 54,
      "vector_index": 144,
      "text": "인 피드백을 주어 UX를 향상시킵니다.\n\n    Flutter에서는 \nAnimatedContainer\n, \nAnimatedOpacity\n 등의 위젯을 사용할 수 있습니다.\n\n\n\n\n7.4.2 인터랙티브 요소 추가\n\n\n\n\n예제\n:\n\n    사용자의 터치에 반응하는 애니메이션 효과를 추가하여, 버튼 누를 때 색상이 서서히 변하는 등의 효과를 줄 수 있습니다.\n\n...",
      "created_at": "20250407_123105"
    },
    "146": {
      "doc_id": "4",
      "index": 55,
      "vector_index": 145,
      "text": "맷을 이해해야 합니다.\n\n\n주의 사항\n:\n\n    통신 오류나 데이터 파싱에 주의하여 예외 처리를 해야 합니다.\n\n\n\n\n7.5.2 시스템 구조\n\n\n\n\n설명\n:\n\n    위젯(화면), 컨트롤러(비즈니스 로직), 프로바이더(데이터 공급)를 분리하여 API 연동을 관리합니다.\n\n\n\n\n7.6 GetConnect 도입\n\n\n7.6.1 Feed 수정\n\n\n\n\n설명\n:\n\n...",
      "created_at": "20250407_123105"
    },
    "147": {
      "doc_id": "4",
      "index": 56,
      "vector_index": 146,
      "text": "데이터를 모델 클래스로 변환하여 앱에서 쉽게 다룰 수 있도록 합니다.\n\n\n\n\n7.6.3 Map을 FeedModel로 변경\n\n\n\n\n설명\n:\n\n    피드 아이템의 데이터를 Map이 아닌 모델 클래스로 변환하여 타입 안정성을 높입니다.\n\n\n\n\n\n\n8. 사례\n\n\n실제 앱에서 자주 볼 수 있는 화면 구성 예시를 살펴봅니다.\n\n\n8.1 Intro 및 로그인 화면\n\n...",
      "created_at": "20250407_123105"
    },
    "148": {
      "doc_id": "4",
      "index": 57,
      "vector_index": 147,
      "text": "onPressed: () {\n                Navigator.pushNamed(context, '/login');\n              },\n              child: Text('로그인'),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\n\n\n\n\n\n출력 결과 설명\n:...",
      "created_at": "20250407_123105"
    },
    "149": {
      "doc_id": "4",
      "index": 58,
      "vector_index": 148,
      "text": "decoration: InputDecoration(labelText: '비밀번호'),\n              obscureText: true,\n            ),\n            SizedBox(height: 20),\n            ElevatedButton(\n              onPressed: () {\n            ...",
      "created_at": "20250407_123105"
    },
    "150": {
      "doc_id": "4",
      "index": 59,
      "vector_index": 149,
      "text": "),\n      ),\n    );\n  }\n}\n\n\n\n\n\n\n출력 결과 설명\n:\n\n    AppBar에 “로그인” 제목이 보이고, 아이디와 비밀번호 입력창 및 “로그인” 버튼이 화면에 나타납니다.\n\n\n\n\n\n\n8.3 회원 가입 화면\n\n\n\n\n\n\n배경 및 설명\n:\n\n    신규 사용자가 이메일, 비밀번호, 닉네임 등을 입력하여 회원 가입을 진행하는 화면입니다.\n\n\n\n...",
      "created_at": "20250407_123105"
    },
    "151": {
      "doc_id": "4",
      "index": 60,
      "vector_index": 150,
      "text": "ation(labelText: '닉네임')),\n            SizedBox(height: 20),\n            ElevatedButton(\n              onPressed: () {\n                // 회원 가입 처리\n              },\n              child: Text('가입하기'),\n  ...",
      "created_at": "20250407_123105"
    },
    "152": {
      "doc_id": "4",
      "index": 61,
      "vector_index": 151,
      "text": ")),\n            SizedBox(height: 20),\n            ElevatedButton(\n              onPressed: () {\n                // 추가 정보 저장 후 처리\n              },\n              child: Text('저장'),\n            ),\n      ...",
      "created_at": "20250407_123105"
    },
    "153": {
      "doc_id": "4",
      "index": 62,
      "vector_index": 152,
      "text": "(fontSize: 24)),\n            SizedBox(height: 20),\n            ElevatedButton(\n              onPressed: () {\n                // 프로필 수정\n              },\n              child: Text('프로필 수정'),\n           ...",
      "created_at": "20250407_123105"
    },
    "154": {
      "doc_id": "5",
      "index": 0,
      "vector_index": 153,
      "text": "제목: Windsurf 영수증 #2503-6322\n보낸 사람: Windsurf <invoice+statements+acct_1NRMxXFKuRRGjKOF@stripe.com>\n받는 사람: serendipity.code@gmail.com\n날짜: Sun, 6 Apr 2025 23:38:52 +0000\n\n--- 본문 ---\nWindsurf (https://win...",
      "created_at": "20250407_150630"
    },
    "155": {
      "doc_id": "5",
      "index": 1,
      "vector_index": 154,
      "text": "- 5037\r\n\r\n영수증 #2503-6322 2025. 4. 6.~2025. 5. 6. Codeium Pro 수량 1개 US$15.00 총액 US$15.00 결제된 금액 US$15.00 구독 관리 (https://billing.stripe.com/p/login/aEUg2Q3vecPN5QQ3cc?referer=invoice_receipt) 질문이 있으신가요?...",
      "created_at": "20250407_150630"
    },
    "156": {
      "doc_id": "5",
      "index": 2,
      "vector_index": 155,
      "text": "͏  ͏  ͏  ͏  ͏  ͏\n           ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏\n           ͏  ͏  ͏  ͏  ͏  ͏\n           ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏\n           ͏  ͏  ͏  ͏  ͏  ͏\n           ͏  ͏  ͏  ͏  ͏  ͏  ͏  ͏  ...",
      "created_at": "20250407_150630"
    },
    "157": {
      "doc_id": "5",
      "index": 3,
      "vector_index": 156,
      "text": ".~2025. 5. 6. Codeium Pro 수량 1개 US$15.00 총액 US$15.00 결제된 금액 US$15.00 구독 관리 질문이 있으신가요? 지원 사이트( https://windsurf.com/support )에 방문하거나 contact@codeium.com 에 문의하십시오. Powered by | Stripe Billing 자세히 알아보기\n\n...",
      "created_at": "20250407_150630"
    }
  },
  "next_doc_id": 6,
  "next_chunk_id": 158
}